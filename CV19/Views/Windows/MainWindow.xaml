<Window x:Class="CV19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  mc:Ignorable="d"
        
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:cmd="clr-namespace:CV19.Infrastructure.Commands"
        xmlns:vm="clr-namespace:CV19.ViewModels"
        xmlns:decanat="clr-namespace:CV19.Models.Decanat"
        xmlns:l1vm="clr-namespace:CV19.ViewModels.Lesson_1"
        xmlns:l2vm="clr-namespace:CV19.ViewModels.Lesson_2"
        xmlns:sys ="clr-namespace:System;assembly=System.Runtime" 
        xmlns:local="clr-namespace:CV19"
        xmlns:oxy="http://oxyplot.org/wpf" 
        Title="{Binding Path=Title}" 
        Height="450" Width="800">

    <Window.DataContext>
        <vm:MainWindowViewModel/>

    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="Q" Command="{Binding CloseApplicationCommand}"/>
    </Window.InputBindings>

    <Window.Resources>
        <cmd:CloseApplicationCommand x:Key="CloseApplicationCommand_key"/>



    </Window.Resources>
    <!-- Тестирование модели-представления 
    <Grid>
        <TextBox 
            Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" 
            VerticalAlignment="Top" Width="324" Height="20"  HorizontalAlignment="Left" Margin="48,42,0,0" TextWrapping="Wrap" />
        <Slider 
            Value="{Binding Path=Title}"
            HorizontalAlignment="Left" Margin="48,98,0,0" VerticalAlignment="Top" Width="324" Height="27"/>
    </Grid> -->
    <TabControl>
        <TabItem Header="lesson 1">
            <TabItem.DataContext>
                <l1vm:Lesson1ViewModel/>
            </TabItem.DataContext>
            <DockPanel>
                <Menu DockPanel.Dock="Top">
                    <MenuItem Header="Файл">
                        <!--<MenuItem Header="Выход" Command="{Binding CloseApplicationCommand}"></MenuItem>-->
                        <MenuItem Header="Выход" Command="{StaticResource CloseApplicationCommand_key}"></MenuItem>
                        <!--<MenuItem Header="Выход">
                    <MenuItem.Command>
                        <cmd:CloseApplicationCommand/>
                       
                    </MenuItem.Command>
                </MenuItem>-->
                    </MenuItem>
                    <MenuItem Header="Помощь">
                        <MenuItem Header="О программе"></MenuItem>
                    </MenuItem>
                    <MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter ="-1">
                        <!--<MenuItem.CommandParameter>
                    <x:Array Type="{x:Type sys:Object}">
                        <sys:Int32>-1</sys:Int32>
                        <sys:Int32>6</sys:Int32>
                    </x:Array>
                </MenuItem.CommandParameter>-->
                        <MenuItem.Header>
                            <fa:ImageAwesome Height="12" Icon="Regular_ArrowAltCircleLeft"></fa:ImageAwesome>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter ="+1">
                        <!--<MenuItem.CommandParameter>
                    <x:Array Type="{x:Type sys:Object}">
                        <sys:Int32>+1</sys:Int32>
                        <sys:Int32>6</sys:Int32>
                    </x:Array>
                </MenuItem.CommandParameter>-->
                        <MenuItem.Header>
                            <fa:ImageAwesome Height="12" Icon="Regular_ArrowAltCircleRight"></fa:ImageAwesome>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="{Binding SelectedPageIndex}" IsEnabled="False"></MenuItem>
                </Menu>
                <StatusBar DockPanel.Dock="Bottom">
                    <StatusBarItem MinWidth="150" MaxWidth="300">
                        <TextBlock Text="{Binding Path=Status}"/>
                    </StatusBarItem>
                    <StatusBarItem>
                        <ProgressBar Width="120" Height="15" Value="30"/>
                    </StatusBarItem>
                </StatusBar>
                <TabControl SelectedIndex="{Binding Path=SelectedPageIndex}">
                    <TabItem>
                        <TabItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <!--<Image Sourse="относительный путь до пикчи"></Image>-->
                                <fa:ImageAwesome Icon="Regular_File" Height="13" Margin="0,0,5,0"
                                            Foreground="Red"/>
                                <TextBlock Text="Tab1"/>
                            </StackPanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="46*"/>
                                <RowDefinition Height="51*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="157*"/>
                                <ColumnDefinition Width="240*"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle Grid.Row="0" Grid.Column="0" 
                                Margin="50,20"
                                Fill="Blue" Stroke="Green" 
                                StrokeThickness="30" 
                                RadiusX="500" RadiusY="7"/>

                            <Ellipse Grid.Row="0" Grid.Column="1" 
                                Fill="Aqua" Stroke="DarkOrange"
                                StrokeThickness="10">
                                <Ellipse.InputBindings>
                                    <MouseBinding Command="{Binding CloseApplicationCommand}"
                                            MouseAction="LeftDoubleClick"/>
                                </Ellipse.InputBindings>
                            </Ellipse>
                            <GridSplitter Grid.Column="0" Grid.RowSpan="2"
                                    HorizontalAlignment="Right"
                                    Width="4"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="{Binding Path=TestDataPoints[43].XValue}">
                        <oxy:PlotView
                    
                    Model="{Binding Path=TestDataPoints}"
                    />
                    </TabItem>
                    <TabItem  Header="График">
                        <TabItem.DataContext>
                            <l1vm:PlotViewModel/>
                        </TabItem.DataContext>

                        <oxy:PlotView Model="{Binding MyModel}"/>

                    </TabItem>
                    <TabItem  Header="Tab4"></TabItem>
                    <TabItem  Header="Tab5"></TabItem>
                    <TabItem  Header="Tab6"></TabItem>
                </TabControl>
            </DockPanel>

        </TabItem>
        <TabItem Header="lesson 2">
            <TabItem.DataContext>
                <l2vm:Lesson2ViewModel/>

            </TabItem.DataContext>

            <TabControl>
                <TabItem Header="Студенты">
                    <!--<TextBlock Text="{Binding Path=Groups[3].Students[4].Name}"></TextBlock>-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!--<ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="7*"/>-->
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <GroupBox Grid.Column="0" Header="Группы">
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Top" Margin="0,3">
                                    <!--<TextBlock Text="Фильтр:"/>-->
                                    <fa:ImageAwesome Height="12" Icon="Solid_Search" Margin="3,0"/>
                                    <TextBox/>
                                </DockPanel>
                                <UniformGrid DockPanel.Dock="Bottom" Rows="1" Margin="0,3">
                                    <UniformGrid.Resources>
                                        <Style  TargetType="Button">
                                            <Setter Property="Margin" Value="3,0"/>
                                            <Setter Property="Padding" Value="3,5"/>
                                            <Setter Property="Background" Value="LightGreen"/>
                                        </Style>
                                    </UniformGrid.Resources>
                                    <Button Command="{Binding Path=CreateGroupCommand}" Style="{StaticResource PrimaryBtn}">
                                        <StackPanel Orientation="Horizontal">
                                            <fa:ImageAwesome Height="13" Icon="Solid_Check" Foreground="Gray" Margin="0,0,3,0">
                                                <fa:ImageAwesome.Effect>
                                                    <DropShadowEffect ShadowDepth="1"/>
                                                </fa:ImageAwesome.Effect>
                                            </fa:ImageAwesome>
                                            <TextBlock Text="Добавить"/>
                                        </StackPanel>
                                    </Button>

                                    <Button Content ="Удалить" Style="{StaticResource DangerBtn}"  Command="{Binding DeleteGroupCommand}" CommandParameter="{Binding SelectedGroup}"/>
                                </UniformGrid>
                                <ListBox ItemsSource="{Binding Path=Groups}" SelectedIndex="0"
                                     SelectedItem="{Binding Path=SelectedGroup}">
                                    <!--DisplayMemberPath="Name"-->
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="decanat:Group">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" Name="TextView"/>
                                                <TextBlock Text="{Binding Students.Count, StringFormat=[Студентов: {0}]}" Margin="10,0,0,0"/>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Students.Count}" Value="0">
                                                    <Setter TargetName="TextView" Property="Foreground" Value="Orange"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </GroupBox>
                        <GroupBox Grid.Column="1" 
                                            Header="{Binding Path=SelectedGroup.Name, 
                                                    FallbackValue='Студенты', 
                                                    TargetNullValue='Группа не выбрана'}">
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Top" Margin="0,3">
                                    <fa:ImageAwesome Height="12" Icon="Solid_Search" Margin="3,0"/>
                                    <TextBox/>
                                </DockPanel>
                                <DataGrid ItemsSource="{Binding SelectedGroup.Students}" 
                                      AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      GridLinesVisibility="Vertical"
                                      VerticalGridLinesBrush="DarkGray"
                                      AlternatingRowBackground="LightGray">
                                    <!--IsReadOnly="True"-->
                                    <!--HorizontalGridLinesBrush="{x:Null}"-->


                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Имя" Binding="{Binding Name}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Рейтинг" Binding="{Binding Rating}" IsReadOnly="True"/>
                                        <!--<DataGridTextColumn Header="Дата рождения" Binding="{Binding Birthday, StringFormat=dd.MM.yyyy}"/>-->
                                        <DataGridTemplateColumn Header="Дата рождения" >
                                            <!--<DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="decanat:Student">
                                                <DatePicker  SelectedDate="{Binding Birthday}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>-->
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="decanat:Student">
                                                    <TextBlock Text="{Binding Birthday, StringFormat=dd.MM.yyyy }"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            <DataGridTemplateColumn.CellEditingTemplate>
                                                <DataTemplate DataType="decanat:Student">
                                                    <DatePicker  SelectedDate="{Binding Birthday}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellEditingTemplate>
                                        </DataGridTemplateColumn>
                                        <!--<DataGridTextColumn Header="Группа" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>-->
                                        <DataGridTextColumn Header="Заметки" Binding="{Binding Description}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Разнородные данные">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <GroupBox Grid.Column="0">
                            <GroupBox.Header>
                                <TextBlock Text="Элементы"/>
                            </GroupBox.Header>
                            <GroupBox.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <ResourceDictionary Source="../../Resources/DataTemplates/CompositeListItemsDataTemplates.xaml"/>
                                    </ResourceDictionary.MergedDictionaries>
                                </ResourceDictionary>
                            </GroupBox.Resources>
                            <ListBox ItemsSource="{Binding Path=CompositeCollection}" 
                                 SelectedItem="{Binding SelectedCompositeValue}">
                                <!--<ListBox.ItemTemplate>
                                <DataTemplate>
                                        <TextBlock Text="{Binding}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>-->
                            </ListBox>
                        </GroupBox>

                        <GroupBox Grid.Column="1">
                            <GroupBox.Header>
                                <TextBlock Text="Выбранный элемент"/>
                            </GroupBox.Header>
                            <GroupBox.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <ResourceDictionary Source="../../Resources/DataTemplates/CompositeItemsControlDataTemplates.xaml"/>
                                    </ResourceDictionary.MergedDictionaries>
                                </ResourceDictionary>
                            </GroupBox.Resources>
                            <ContentControl Content="{Binding SelectedCompositeValue}"/>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Кнопки">
                    <UniformGrid>
                        <Button VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="111" Margin="15,5" Padding="14,5"
                            Style="{StaticResource PrimaryBtn}"/>

                        <Button VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="2" Margin="15,5" Padding="14,5"
                            Style="{StaticResource DangerBtn}"/>

                        <Button VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="2" Margin="15,5" Padding="14,5"
                            Style="{StaticResource CustomButtonStyle}"/>

                        <Button VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="2" Margin="15,5,0,5" Padding="14,5"
                            Style="{StaticResource CheckButtonStyle}" Width="117" Height="60"/>

                        <Button VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="2" Margin="15,5,0,5" Padding="14,5"
                            Style="{StaticResource RemoveButtonStyle}" Width="117" Height="60"
                                RenderTransformOrigin="0.5,0.5">
                            <Button.Background>
                                <SolidColorBrush Color="White" x:Name="ButtonBrush"/>
                            </Button.Background>
                            <Button.RenderTransform>
                                <RotateTransform Angle="0" x:Name="ButtonRotate"/>
                            </Button.RenderTransform>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonRotate"
                                                             Storyboard.TargetProperty="Angle"
                                                              To="360"
                                                             Duration="0:0:1"
                                                             AutoReverse="True"/> <!--From="0"-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Button.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Button.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            To="White"
                                                            Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </UniformGrid>
                </TabItem>
            </TabControl>
        </TabItem>
    </TabControl>


</Window>
